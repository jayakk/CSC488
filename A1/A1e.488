%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CSC488S 2013 Assignment 1 part e                                     %
% Group Number: c488h07                                                %
% This program is meant to use/test a portion of the CSC488            %
% toy language functionality:                                          %
% Uses recursive functions and procedures with and without parameters  %
% with at least one nested procedure and one nested function           %
% declaration                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

begin % main program

forward proc printInt(integer x)

% Recursive function with arguments and uses forward
% declaration as well as declares its own (useless) function
%  Returns fib number n (and prints intermediate results,
%  possibly out of order)
integer fib(integer n) begin
    integer x
    integer getN(integer n2) begin
		result n2
    end
	if n <= 1 then printInt(1) result getN(1) fi
	x = fib(n-1) + fib(n-2)
	printInt(x) 
	result x
end

% Dummy function
proc printInt(integer x) begin
	put x
end

% Recursive procedure with arguments
%  Prints fib numbers (might be out of order)
proc printFib(integer n) begin
	integer x
	if n <= 1 then put n return fi
	put ( fib(n-1) + fib(n-2) )
	return
end

% Recursive procedure without arguments
%  Waits for an input of 5 and then returns 5
proc waitForFive() begin
	integer x
	get x
	if x = 5 then return fi
	waitForFive()
	return
end

% Recursive function without arguments
%  Waits for an input of 6 and then returns 6
integer waitForSix() begin
	integer x
	get x
	if x = 6 then result 6 fi
	result waitForSix()
end

put fib(10)
printFib(10)
waitForFive()
put waitForSix()

end % main program
